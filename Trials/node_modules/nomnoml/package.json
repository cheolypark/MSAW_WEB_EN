{
  "_args": [
    [
      "nomnoml",
      "/home/aakarshika/w"
    ]
  ],
  "_from": "nomnoml",
  "_id": "nomnoml@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/nomnoml",
  "_phantomChildren": {
    "cp-data": "1.1.3"
  },
  "_requested": {
    "name": null,
    "raw": "nomnoml",
    "rawSpec": "nomnoml",
    "scope": null,
    "spec": "/home/aakarshika/w/nomnoml",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:nomnoml",
  "_shasum": "bf07518803c3c3a3697806718afe951b727566d1",
  "_shrinkwrap": null,
  "_spec": "nomnoml",
  "_where": "/home/aakarshika/w",
  "author": {
    "email": "daniel.kallin@gmail.com",
    "name": "Daniel Kallin"
  },
  "bin": {
    "nomnoml": "dist/nomnoml-cli.js"
  },
  "bugs": {
    "url": "https://github.com/skanaar/nomnoml/issues"
  },
  "dependencies": {
    "dagre": "0.4.x",
    "lodash": "~3.7.0"
  },
  "description": "The sassy UML renderer that generates diagrams from text",
  "devDependencies": {
    "jison": "0.4.13"
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "dist/nomnoml-cli.js",
    "dist/nomnoml.js"
  ],
  "gitHead": "0ec91f01bf01e356d5f95dfde28e377ad3080375",
  "homepage": "http://www.nomnoml.com",
  "keywords": [
    "uml"
  ],
  "license": "MIT",
  "main": "dist/nomnoml.js",
  "name": "nomnoml",
  "optionalDependencies": {},
  "readme": "nomnoml\n=======\n\nHello, this is [nomnoml](http://www.nomnoml.com), a tool for drawing UML diagrams based on a simple syntax. It tries to keep its syntax visually as close as possible to the generated UML diagram without resorting to ASCII drawings.\n\nCreated by [Daniel Kallin](https://github.com/skanaar). Contributions by [Alexander Moosbrugger](https://github.com/amoosbr) and [korroz](https://github.com/korroz).\n\n### Nomnoml was made possible by these cool projects\n\n- [jison](http://zaach.github.io/jison/)\n- [dagre](https://github.com/cpettitt/dagre)\n- [lodash](http://lodash.com)\n- [typicons](http://typicons.com/)\n- [zepto](http://zeptojs.com/)\n- [codemirror](https://codemirror.net/)\n- [solarized](http://ethanschoonover.com/solarized)\n\n## Library\n\nThe [nomnoml](http://www.nomnoml.com) standalone javascript library can be used to render diagrams on your own web page. The only dependencies are [lodash](http://lodash.com) and [dagre](https://github.com/cpettitt/dagre). Install it using either *npm* or good old script inclusion.\n\nNodeJS usage with SVG output:\n\n    npm install nomnoml\n\n    var nomnoml = require('nomnoml');\n    var src = '[nomnoml] is -> [awesome]';\n    console.log(nomnoml.renderSvg(src));\n\nHtml usage with a Canvas rendering target:\n\n```html\n<script src=\"lodash.js\"></script>\n<script src=\"dagre.js\"></script>\n<script src=\"nomnoml.js\"></script>\n\n<canvas id=\"target-canvas\"></canvas>\n<script>\n    var canvas = document.getElementById('target-canvas');\n    var source = '[nomnoml] is -> [awesome]';\n    nomnoml.draw(canvas, source);\n</script>\n```\n\n## SVG support\n\nAn experimental (and not fully featured) SVG rendering mode is available as the `nomnoml.renderSvg` function.\n\n## Web application\n\nThe [nomnoml](http://www.nomnoml.com) web application is a simple editor with a live preview. It is purely client side and changes are saved to the browser's _localStorage_, so your diagram should be here the next time, (but no guarantees).\n\n### Interaction\n\nThe canvas can be panned and zoomed by dragging and scrolling in the right hand third of the canvas. Downloaded image files will be given the filename in the `#title` directive.\n\n### Example\n\nThis is how the Decorator pattern looks like in nomnoml syntax:\n\n    [<frame>Decorator pattern|\n      [<abstract>Component||+ operation()]\n      [Client] depends --> [Component]\n      [Decorator|- next: Component]\n      [Decorator] decorates -- [ConcreteComponent]\n      [Component] <:- [Decorator]\n      [Component] <:- [ConcreteComponent]\n    ]\n\n### Association types\n\n    -    association\n    ->   association\n    <->  association\n    -->  dependency\n    <--> dependency\n    -:>  generalization\n    <:-  generalization\n    --:> implementation\n    <:-- implementation\n    +-   composition\n    +->  composition\n    o-   aggregation\n    o->  aggregation\n    --   note\n    -/-  hidden\n\n### Classifier types\n\n    [name]\n    [<abstract> name]\n    [<instance> name]\n    [<reference> name]\n    [<note> name]\n    [<package> name]\n    [<frame> name]\n    [<database> name]\n    [<start> name]\n    [<end> name]\n    [<state> name]\n    [<choice> name]\n    [<input> name]\n    [<sender> name]\n    [<receiver> name]\n    [<actor> name]\n    [<usecase> name]\n    [<label> name]\n    [<hidden> name]\n\n### Directives\n\n    #arrowSize: 1\n    #bendSize: 0.3\n    #direction: down | right\n    #gutter: 5\n    #edgeMargin: 0\n    #edges: hard | rounded\n    #fill: #eee8d5; #fdf6e3\n    #fillArrows: false\n    #font: Calibri\n    #fontSize: 12\n    #leading: 1.25\n    #lineWidth: 3\n    #padding: 8\n    #spacing: 40\n    #stroke: #33322E\n    #title: filename\n    #zoom: 1\n\n### Custom classifier styles\n\nA directive that starts with \".\" define a classifier style.\n\n    #.box: fill=#88ff88\n    #.blob: fill=pink visual=ellipse italic bold dashed\n    [<box> GreenBox]\n    [<blob> HideousBlob]\n\nAvailable visuals are\n\n    visual=actor\n    visual=class\n    visual=database\n    visual=ellipse\n    visual=end\n    visual=frame\n    visual=hidden\n    visual=input\n    visual=none\n    visual=note\n    visual=package\n    visual=receiver\n    visual=rhomb\n    visual=roundrect\n    visual=sender\n    visual=start\n\nAvailable modifiers are\n\n    center\n    bold\n    underline\n    italic\n    dashed\n    empty\n\n## Contributing\n\nIf you want to contribute to the project more info is available in [CONTRIBUTING.md](CONTRIBUTING.md).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/skanaar/nomnoml.git"
  },
  "scripts": {
    "prepublish": "node build.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
